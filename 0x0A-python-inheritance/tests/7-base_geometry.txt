IMPORT

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

TESTS

Test0:
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "hola")
Traceback (most recent call last):
TypeError: name must be an integer

Test1:
>>> bg.integer_validator("name", 0)
Traceback (most recent call last):
ValueError: name must be greater than 0

Test2:
>>> bg.integer_validator("name", -4)
Traceback (most recent call last):
ValueError: name must be greater than 0

Test3:
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

Test4:
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test5:
>>> bg.integer_validator("name", 1)

Test6:
>>> bg.integer_validator("name", (4,))
Traceback (most recent call last):
TypeError: name must be an integer

Test7:
>>> bg.integer_validator("name", [3])
Traceback (most recent call last):
TypeError: name must be an integer

Test7:
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
TypeError: name must be an integer

Test8:
>>> bg.integer_validator("name", {3,4})
Traceback (most recent call last):
TypeError: name must be an integer

Test9:
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer
